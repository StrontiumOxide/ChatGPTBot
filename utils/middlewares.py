from typing import Any, Awaitable, Callable, Dict
from aiogram import BaseMiddleware
from aiogram.types import TelegramObject, Update, Message
from utils.config import active_people, gpt_active


class CountMiddleware(BaseMiddleware):
    """Middleware –ø–æ —Å—á—ë—Ç—É –∞–ø–¥–µ–π—Ç–æ–≤"""

    async def __call__(self, handler: Callable[[Update, Dict[str, Any]], Awaitable[Any]], event: Update, data: Dict[str, Any]) -> Any:
        
        if event.message:
            user_id = event.message.from_user.id
        elif event.callback_query:
            user_id = event.callback_query.from_user.id
        else:
            return

        if user_id in active_people:
            active_people[user_id]['count'] += 1
        else:
            active_people[user_id] = {'count': 1, 'status': True}

            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Ö–µ–Ω–¥–ª–µ—Ä–∞
        if active_people[user_id]['count'] > 50:
            if active_people[user_id]['status']:
                active_people[user_id]['status'] = False
                text = f'''
‚ö†Ô∏è <b>–í–ù–ò–ú–ê–ù–ò–ï</b> ‚ö†Ô∏è

<b>–æ—Ç API Telegram</b>
<blockquote>–£–≤–∞–∂–∞–µ–º—ã–π, <b>{event.message.from_user.full_name}</b>‚ùóÔ∏è
–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º üí≠
–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–∑–∂–µ ‚è≥
</blockquote>
'''
                await event.message.answer(
                    text=text
                )
            return
        
        await handler(event, data)

        return await super().__call__(handler, event, data)
    

class CheckActiveMiddleware(BaseMiddleware):
    """Middleware –ø–æ –∫–æ–Ω—Ç—Ä–æ–ª—é –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ ChatGPT"""

    async def __call__(self, handler: Callable[[TelegramObject, Dict[str, Any]], Awaitable[Any]], message: Message, data: Dict[str, Any]) -> Any:
        
        user_id = message.from_user.id

        if user_id in gpt_active:
            await message.reply(
                text='<b>–ü–æ–¥–æ–∂–¥–∏—Ç–µ‚ùóÔ∏è</b>\n<i>ChatGPT –µ—â—ë –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å...</i>'
            )
        else:
            await handler(message, data)
        
        return await super().__call__(handler, message, data)
    